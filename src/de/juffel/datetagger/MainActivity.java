package de.juffel.datetagger;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import android.app.Activity;
import android.content.ContentValues;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.support.v4.widget.DrawerLayout;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.ListView;
import de.juffel.datetagger.DateTaggerContract.TagEntry;


public class MainActivity extends Activity {

	private String[] drawerItems = {"Main", "Tag List"};
    private DrawerLayout mDrawerLayout;
    private ListView mDrawerList;
    private SQLiteDatabase db;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        // initialize drawer list
        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
        mDrawerList = (ListView) findViewById(R.id.left_drawer); 
        // set the adapter for the list view
        mDrawerList.setAdapter(new ArrayAdapter<String>(this,
        		R.layout.drawer_list_item, drawerItems));
        // set the lists click listener
        mDrawerList.setOnItemClickListener(new DrawerItemClickListener());

        // initialize db stuff
        DateTaggerDbHelper mDbHelper = new DateTaggerDbHelper(this);
        db = mDbHelper.getWritableDatabase();
    }

    public MainActivity() {
    	
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
    
    public void addTag() {
    	EditText editText = (EditText) findViewById(R.id.edit_message);
    	addTag(editText.getText().toString());
    	// empty EditText
    	editText.setText("");
    }

    private Long addTag(String tag) {
    	// do not add empty tags
    	if (tag.equals("")) {
    		return null;
    	}
    	ContentValues values = new ContentValues();
    	
    	// get current date
    	String date = getCurrentDateTimeString();

    	// id will be autogenerated (hopefluffy)
    	values.put(TagEntry.COLUMN_NAME_CONTENT, tag);
    	values.put(TagEntry.COLUMN_NAME_DATE, date);

    	// the 2nd parameter is a nullable column (why ? i dont know)
    	return db.insert(TagEntry.TABLE_NAME, TagEntry.COLUMN_NAME_CONTENT, values);
    }

    private List<String> getTags() {
    	String[] columns = { TagEntry.COLUMN_NAME_ID, TagEntry.COLUMN_NAME_CONTENT };
    	Cursor cursor = db.query(TagEntry.TABLE_NAME,
    			columns,
    			null,
    			null,
    			null,
    			null,
    			null);
    	
    	List<String> ret = new ArrayList<String>();

    	cursor.moveToFirst();
    	// why the hell is there no method for retrieving the whole result set of the query?
    	while (!cursor.isLast()) {
    		ret.add(cursor.getString(
    		    cursor.getColumnIndexOrThrow(TagEntry.COLUMN_NAME_CONTENT)));
    		cursor.moveToNext();
    	}
    	return ret;
    }
    
    private String getCurrentDateTimeString() {
    	SimpleDateFormat iso8601Format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    	return iso8601Format.format(new Date());
    }

    private class DrawerItemClickListener implements ListView.OnItemClickListener {
        @Override
        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
            selectItem(position);
        }
    }

    private void selectItem(int position) {
    	// do something!
//        // Create a new fragment and specify the planet to show based on position
//        Fragment fragment = new PlanetFragment();
//        Bundle args = new Bundle();
//        args.putInt(PlanetFragment.ARG_PLANET_NUMBER, position);
//        fragment.setArguments(args);
//
//        // Insert the fragment by replacing any existing fragment
//        FragmentManager fragmentManager = getFragmentManager();
//        fragmentManager.beginTransaction()
//                       .replace(R.id.content_frame, fragment)
//                       .commit();
//
//        // Highlight the selected item, update the title, and close the drawer
//        mDrawerList.setItemChecked(position, true);
//        setTitle(mPlanetTitles[position]);
        mDrawerLayout.closeDrawer(mDrawerList);
    }    
}
